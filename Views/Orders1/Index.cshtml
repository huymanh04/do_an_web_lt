@model do_an_web.Models.AccountListViewModel

@{
    ViewBag.Title = "Quản Lý đơn hàng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.ti = "Quản Lý đơn hàng";
}
<link href="~/Css/qunlydonhang.css" rel="stylesheet" />
<h2>Tất cả đơn hàng</h2>

<table class="table">
    <tr>
        <th>
            Username
        </th>
        <th>
            Tổng tiền
        </th>
        <th>
            Phương thức thanh toán
        </th>
        <th>
            Đại chỉ giao hàng
        </th>
        <th>
            ngày đặt hàng
        </th>
        <th>
            Trạng thái
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.orders)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Account.username)

            </td>
            <td>
                @String.Format("{0:N0}", item.total_amount) ₫
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.phuongthuc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Account.address)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.order_date)

            </td>

            <td id="order-@item.order_id">

                <select class="status-dropdown" data-order-id="@item.order_id" onchange="updateStatus(@item.order_id)">
                    <option value="Pending" @if (item.status == "Pending") { <text> selected</text> }>Pending</option>
                    <option value="Shipped" @if (item.status == "Shipped") { <text> selected</text> }>Shipped</option>
                    <option value="Completed" @if (item.status == "Completed") { <text> selected</text> }>Completed</option>
                    <option value="Cancelled" @if (item.status == "Cancelled") { <text> selected</text> }>Cancelled</option>
                </select>
            </td>

        </tr>
    }

</table>
<div class="pagination">
    @if (Model.PageNumber > 1)
    {
        <a href="@Url.Action("index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize })" class="prev">Trước</a>
    }

    @for (int i = 1; i <= (int)Math.Ceiling((double)Model.TotalRecords / Model.PageSize); i++)
    {
        <a href="@Url.Action("index", new { pageNumber = i, pageSize = Model.PageSize })" class="@(i == Model.PageNumber ? "active" : "")">@i</a>
    }

    @if (Model.PageNumber < (int)Math.Ceiling((double)Model.TotalRecords / Model.PageSize))
    {
        <a href="@Url.Action("index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize })" class="next">Tiếp theo</a>
    }
</div>
@section Scripts {
    <script>
    // Hàm JavaScript để gửi yêu cầu AJAX khi chọn trạng thái
    function updateStatus(orderId) {
        // Sử dụng selector chính xác để lấy giá trị của dropdown
        var status = $(`#order-${orderId} .status-dropdown`).val(); // Lấy giá trị trạng thái từ dropdown

        if (!status) {
            console.error('Status is null or undefined');
            alert('Vui lòng chọn trạng thái');
            return;
        }

        // Gửi yêu cầu AJAX để cập nhật trạng thái đơn hàng
        $.ajax({
            url: '@Url.Action("UpdateStatus", "Orders1")',  // Đảm bảo URL này đúng
            type: 'POST',
            data: {
                orderId: orderId,
                status: status
            },
            success: function(response) {
                // Xử lý khi cập nhật thành công
                alert('Thay đổi trạng thái thành công!');
            },
            error: function(xhr, status, error) {
                // Hiển thị chi tiết lỗi để dễ dàng debug
                console.log("Error Status: " + status);
                console.log("Error Message: " + error);
                alert('Lỗi khi cập nhật trạng thái');
            }
        });
    }
    </script>}
    <style>
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            list-style: none;
            padding: 0;
            margin: 20px 0;
        }

            .pagination a {
                display: inline-block;
                padding: 10px 15px;
                margin: 0 5px;
                text-decoration: none;
                color: #007bff;
                border: 1px solid #ddd;
                border-radius: 5px;
                font-size: 16px;
                transition: background-color 0.3s, color 0.3s;
            }

                .pagination a:hover {
                    background-color: #007bff;
                    color: white;
                }

            .pagination .active {
                background-color: #007bff;
                color: white;
                font-weight: bold;
            }

            .pagination .prev, .pagination .next {
                font-weight: bold;
                color: #007bff;
            }

                .pagination .prev:hover, .pagination .next:hover {
                    background-color: #0056b3;
                    color: white;
                }

            .pagination a.disabled {
                color: #ccc;
                pointer-events: none;
                cursor: not-allowed;
            }

            .pagination .prev, .pagination .next {
                background-color: #f1f1f1;
                padding: 10px 15px;
                border-radius: 50%;
            }

                .pagination .prev:hover, .pagination .next:hover {
                    background-color: #007bff;
                    color: white;
                }

        /* Định dạng bảng */
        .table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            font-size: 16px;
            text-align: center; /* Căn giữa nội dung bảng */
        }

            /* Định dạng tiêu đề cột */
            .table th {
                background-color: #007bff;
                color: white;
                padding: 10px;
            }

            /* Định dạng các ô dữ liệu */
            .table td {
                border: 1px solid #dddddd;
                padding: 8px;
            }

            /* Định dạng hàng khi di chuột qua */
            .table tr:hover {
                background-color: #f1f1f1;
            }

            /* Định dạng liên kết trong bảng */
            .table a {
                text-decoration: none;
                color: #007bff; /* Màu xanh cho liên kết */
            }

                .table a:hover {
                    text-decoration: underline; /* Gạch chân liên kết khi di chuột */
                }

        /* Định dạng nút "Create New" */
        a.btn-create {
            display: inline-block;
            margin: 10px 0;
            padding: 10px 15px;
            background-color: #28a745; /* Màu xanh lá cây */
            color: white;
            text-align: center;
            border-radius: 5px;
            text-decoration: none;
        }

        .btn-edit {
            color: white;
            background-color: #007bff; /* Màu xanh cho nút chỉnh sửa */
        }

            .btn-edit:hover {
                background-color: #0056b3; /* Màu nền khi hover */
            }

        a.btn-create:hover {
            background-color: #218838; /* Màu xanh đậm hơn khi di chuột */
        }

        .button-container {
            display: flex; /* Sử dụng Flexbox để xếp các nút nằm ngang */
            gap: 10px; /* Khoảng cách giữa các nút */
        }

        .button {
            padding: 10px 20px; /* Padding cho nút bấm */
            border: none; /* Không có đường viền */
            border-radius: 5px; /* Bo tròn các góc */
            cursor: pointer; /* Con trỏ thay đổi khi di chuột */
            text-decoration: none; /* Không có gạch chân */
            font-size: 16px; /* Kích thước chữ */
            transition: background-color 0.3s, color 0.3s; /* Hiệu ứng chuyển tiếp */
        }

        .edit-button {
            background-color: #4CAF50; /* Màu nền xanh lá cho nút Chỉnh sửa */
            color: white; /* Màu chữ trắng */
        }

            .edit-button:hover {
                background-color: #45a049; /* Màu xanh đậm hơn khi hover */
            }

        .delete-button {
            background-color: #f44336; /* Màu nền đỏ cho nút Xóa */
            color: white; /* Màu chữ trắng */
        }

            .delete-button:hover {
                background-color: #e53935; /* Màu đỏ đậm hơn khi hover */
            }
    </style>